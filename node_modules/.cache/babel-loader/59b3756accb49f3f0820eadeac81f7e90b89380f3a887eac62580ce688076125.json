{"ast":null,"code":"import { all, put, select, takeLatest } from 'redux-saga/effects'; // importe de redux-saga/effects\nimport { addSuccess, cartAmountUpdateSuccess, cartRemove, cartAmountUpdate, cartClearAmountUpdate } from '../store/actions'; // importar de store/actions\n\n/* ### métodos para redux saga que funcionam por trás dos panos na aplicação aos quais você queira ###\r\n** ### que funcione junto aos componentes como Home, Cart e ShowCart ###\r\n**/\n\n// representa o BACK-END. Caso queira para a produção, desconsidere esse objeto booksjson caso queira um banco de dados real\nconst booksjson = [{\n  id: 1,\n  title: 'Luna',\n  price: 185.00,\n  img: 'https://static.natura.com/cdn/ff/gN2TLzXLIDyW1Ge0jjnxUjN82pjRyOj3_v5vUM4AfPk/1666791481/public/styles/original/public/2022-10/trinca-luna_classico.webp?itok=Daoh8mfg&img=2'\n}, {\n  id: 2,\n  title: 'Encanto Atraente & Deslumbrante',\n  price: 70.00,\n  img: 'https://www.avon.com.br/assets/fit-in/720x720/center/middle/https%3A%2F%2Favongroup.vtexassets.com%2Farquivos%2Fids%2F172903%2F1446843.jpg%3Fv%3D637672283447400000'\n}, {\n  id: 3,\n  title: 'Natura Homem',\n  price: 170.00,\n  img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS969gPFD3ncpdiEfo3mpC6izq18P0t84fQaQ&usqp=CAU'\n}];\n\n// function saga responsável por executar em segundo plano\nfunction addToCart(_ref) {\n  let {\n    id\n  } = _ref;\n  return function* () {\n    // obtém um book através do ID\n    const s = yield select(state => state.clickCart.cart.map(p => {\n      return p[0].id === id;\n    }));\n    //window.alert(s[id]);\n    if (s[id]) window.alert('Produto existe');else window.alert('Produto não existe');\n    const book = booksjson.map(book => book.id === id ? book : null);\n\n    // adiciona item ao carrinho\n    yield put(addSuccess([book[id - 1]]));\n    // atualiza quantia de item por id ao carrinho\n    yield put(cartAmountUpdateSuccess(id));\n  }();\n}\n\n// function saga responsável por executar em segundo plano\nfunction removeAmount(_ref2) {\n  let {\n    id\n  } = _ref2;\n  return function* () {\n    // atualize a quantia de item por id ao carrinho\n    yield put(cartAmountUpdate(id));\n  }();\n}\n\n// function saga responsável por executar em segundo plano\nfunction* cartClearUpdate() {\n  // atualize e limpe todas as quantias de itens ao carrinho\n  yield put(cartClearAmountUpdate());\n}\n\n/* ### exporta como padrão com all (que junta todos os sagas de redux) com takeLatest para cada ação de add (adicionar) \r\n** ### quando houver cliques no botão em Home, Cart e ShowCart, ou seja, takeLatest ouve os eventos de adiçao de livros e nos cliques no botão\r\n   ### em scripts Home. Você poderá adiconar mais eventos se quiser além desse que está embaixo.\r\n**/\nexport default all([takeLatest('add', addToCart), takeLatest('@cart/removeItem', removeAmount), takeLatest('@cart/clear', cartClearUpdate)]);","map":{"version":3,"names":["all","put","select","takeLatest","addSuccess","cartAmountUpdateSuccess","cartRemove","cartAmountUpdate","cartClearAmountUpdate","booksjson","id","title","price","img","addToCart","s","state","clickCart","cart","map","p","window","alert","book","removeAmount","cartClearUpdate"],"sources":["C:/Users/Agripino/Desktop/mini_Projeto_ReactJS/src/store/sagas.js"],"sourcesContent":["import {all, put, select, takeLatest} from 'redux-saga/effects'  // importe de redux-saga/effects\r\nimport { addSuccess, cartAmountUpdateSuccess, cartRemove, cartAmountUpdate, cartClearAmountUpdate } from '../store/actions'; // importar de store/actions\r\n\r\n/* ### métodos para redux saga que funcionam por trás dos panos na aplicação aos quais você queira ###\r\n** ### que funcione junto aos componentes como Home, Cart e ShowCart ###\r\n**/\r\n\r\n// representa o BACK-END. Caso queira para a produção, desconsidere esse objeto booksjson caso queira um banco de dados real\r\nconst booksjson = [\r\n    {id: 1, title: 'Luna', price: 185.00, img: 'https://static.natura.com/cdn/ff/gN2TLzXLIDyW1Ge0jjnxUjN82pjRyOj3_v5vUM4AfPk/1666791481/public/styles/original/public/2022-10/trinca-luna_classico.webp?itok=Daoh8mfg&img=2'},\r\n    {id: 2, title: 'Encanto Atraente & Deslumbrante', price: 70.00, img: 'https://www.avon.com.br/assets/fit-in/720x720/center/middle/https%3A%2F%2Favongroup.vtexassets.com%2Farquivos%2Fids%2F172903%2F1446843.jpg%3Fv%3D637672283447400000'},\r\n    {id: 3, title: 'Natura Homem', price: 170.00, img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS969gPFD3ncpdiEfo3mpC6izq18P0t84fQaQ&usqp=CAU'}\r\n  ];\r\n\r\n// function saga responsável por executar em segundo plano\r\nfunction* addToCart({id}) {\r\n    // obtém um book através do ID\r\n    const s = yield select(state => (state.clickCart.cart.map((p => {return p[0].id === id}))));\r\n    //window.alert(s[id]);\r\n    if(s[id])\r\n        window.alert('Produto existe');\r\n    else\r\n        window.alert('Produto não existe');\r\n\r\n    const book = booksjson.map(book => (book.id === id) ? book : null);\r\n\r\n    // adiciona item ao carrinho\r\n    yield put(addSuccess([book[id - 1]]));\r\n    // atualiza quantia de item por id ao carrinho\r\n    yield put(cartAmountUpdateSuccess(id));\r\n}\r\n\r\n// function saga responsável por executar em segundo plano\r\nfunction* removeAmount({id}) {\r\n    // atualize a quantia de item por id ao carrinho\r\n    yield put(cartAmountUpdate(id));\r\n}\r\n\r\n// function saga responsável por executar em segundo plano\r\nfunction* cartClearUpdate() {    \r\n    // atualize e limpe todas as quantias de itens ao carrinho\r\n    yield put(cartClearAmountUpdate());\r\n}\r\n\r\n/* ### exporta como padrão com all (que junta todos os sagas de redux) com takeLatest para cada ação de add (adicionar) \r\n** ### quando houver cliques no botão em Home, Cart e ShowCart, ou seja, takeLatest ouve os eventos de adiçao de livros e nos cliques no botão\r\n   ### em scripts Home. Você poderá adiconar mais eventos se quiser além desse que está embaixo.\r\n**/\r\nexport default all([\r\n    takeLatest('add', addToCart),\r\n    takeLatest('@cart/removeItem', removeAmount),\r\n    takeLatest('@cart/clear', cartClearUpdate)\r\n]);"],"mappings":"AAAA,SAAQA,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAO,oBAAoB,EAAE;AACjE,SAASC,UAAU,EAAEC,uBAAuB,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,qBAAqB,QAAQ,kBAAkB,CAAC,CAAC;;AAE7H;AACA;AACA;;AAEA;AACA,MAAMC,SAAS,GAAG,CACd;EAACC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE,MAAM;EAAEC,GAAG,EAAE;AAA6K,CAAC,EACzN;EAACH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,iCAAiC;EAAEC,KAAK,EAAE,KAAK;EAAEC,GAAG,EAAE;AAAqK,CAAC,EAC3O;EAACH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,cAAc;EAAEC,KAAK,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAqG,CAAC,CAC1J;;AAEH;AACA,SAAUC,SAAS;EAAA,IAAC;IAACJ;EAAE,CAAC;EAAA,oBAAE;IACtB;IACA,MAAMK,CAAC,GAAG,MAAMb,MAAM,CAACc,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAI;MAAC,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACV,EAAE,KAAKA,EAAE;IAAA,CAAC,CAAG,CAAC;IAC3F;IACA,IAAGK,CAAC,CAACL,EAAE,CAAC,EACJW,MAAM,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAAC,KAE/BD,MAAM,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEtC,MAAMC,IAAI,GAAGd,SAAS,CAACU,GAAG,CAACI,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKA,EAAE,GAAIa,IAAI,GAAG,IAAI,CAAC;;IAElE;IACA,MAAMtB,GAAG,CAACG,UAAU,CAAC,CAACmB,IAAI,CAACb,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC;IACA,MAAMT,GAAG,CAACI,uBAAuB,CAACK,EAAE,CAAC,CAAC;EAC1C,CAAC;AAAA;;AAED;AACA,SAAUc,YAAY;EAAA,IAAC;IAACd;EAAE,CAAC;EAAA,oBAAE;IACzB;IACA,MAAMT,GAAG,CAACM,gBAAgB,CAACG,EAAE,CAAC,CAAC;EACnC,CAAC;AAAA;;AAED;AACA,UAAUe,eAAe,GAAG;EACxB;EACA,MAAMxB,GAAG,CAACO,qBAAqB,EAAE,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA,eAAeR,GAAG,CAAC,CACfG,UAAU,CAAC,KAAK,EAAEW,SAAS,CAAC,EAC5BX,UAAU,CAAC,kBAAkB,EAAEqB,YAAY,CAAC,EAC5CrB,UAAU,CAAC,aAAa,EAAEsB,eAAe,CAAC,CAC7C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}