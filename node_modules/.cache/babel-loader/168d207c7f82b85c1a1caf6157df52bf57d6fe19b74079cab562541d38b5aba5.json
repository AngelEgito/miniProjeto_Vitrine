{"ast":null,"code":"// essa parte é reponsável pelo funcionamento de redux saga\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer, reducerAmountCart } from './reducer';\nimport rootSaga from './rootSaga';\n\n// cria saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nconst reducers = combineReducers({\n  clickCart: reducer,\n  clickAmount: reducerAmountCart\n});\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","createSagaMiddleware","reducer","reducerAmountCart","rootSaga","sagaMiddleware","reducers","clickCart","clickAmount","store","run"],"sources":["C:/Users/Agripino/Desktop/mini_Projeto_ReactJS/src/store/main.js"],"sourcesContent":["// essa parte é reponsável pelo funcionamento de redux saga\r\n\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport {reducer, reducerAmountCart} from './reducer'\r\nimport rootSaga from './rootSaga'\r\n\r\n// cria saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n\r\nconst reducers = combineReducers({\r\n  clickCart: reducer,\r\n  clickAmount: reducerAmountCart,\r\n});\r\n\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;"],"mappings":"AAAA;;AAEA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAAQC,OAAO,EAAEC,iBAAiB,QAAO,WAAW;AACpD,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAAE;AAG7C,MAAMK,QAAQ,GAAGN,eAAe,CAAC;EAC/BO,SAAS,EAAEL,OAAO;EAClBM,WAAW,EAAEL;AACf,CAAC,CAAC;AAGF,MAAMM,KAAK,GAAGX,WAAW,CACvBQ,QAAQ,EACRP,eAAe,CAACM,cAAc,CAAC,CAChC;AAGDA,cAAc,CAACK,GAAG,CAACN,QAAQ,CAAC;AAE5B,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}